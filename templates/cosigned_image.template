@test "Test_cosigned_image $IMAGE $IMAGE_SIZE $RUNTIMECLASSNAME" {
	set_runtimeclass_config $RUNTIMECLASSNAME
	#switch_measured_rootfs_verity_scheme none
	#generate_cosign_image $(echo $REGISTRTYIMAGE | cut -d ":" -f1)
	
	pod_config="$(new_pod_config_normal ${test_coco_path}/../fixtures/cosign-config.yaml.in "$IMAGE" "$RUNTIMECLASSNAME" "$(echo $REGISTRTYIMAGE | cut -d "/" -f1)/cosigned/$IMAGE:cosigned")"
	remove_kernel_param "agent.enable_signature_verification"
	add_kernel_params "agent.aa_kbc_params=offline_fs_kbc::null"
	add_kernel_params "agent.config_file=/etc/offline-agent-config.toml"
	cp_to_guest_img "etc" "${test_coco_path}/../config/offline-agent-config.toml"
	cp_to_guest_img "etc" "${test_coco_path}/../tests/aa-offline_fs_kbc-resources.json"
	create_test_pod $pod_config
	kubectl get pods
	pod_id=$(kubectl get pods -o jsonpath='{.items..metadata.name}')
	kubernetes_delete_cc_pod_if_exists $pod_id || true
	rm $pod_config
}
